// 메인화면, 탭 뿌려주기
import {View,Text,FlatList,ActivityIndicator,TouchableOpacity,Image} from 'react-native'
import {useState,useCallback,useRef} from 'react'
import {useUser} from '../../global/contexts/conText'
import {useFocusEffect} from '@react-navigation/native'
import Svg, { Path, G, Mask, Defs, ClipPath, Rect, LinearGradient, Stop } from 'react-native-svg'

// SMS 아이콘 컴포넌트
const SmsIcon = () => (
    <Svg width="25" height="30" viewBox="0 0 24 24" fill="none">
        <Path d="M22.2647 2.42778C21.98 2.19091 21.6364 2.03567 21.2704 1.97858C20.9045 1.92149 20.5299 1.96469 20.1866 2.10357L2.26566 9.33892C1.88241 9.4966 1.55618 9.76711 1.33026 10.1145C1.10434 10.462 0.989427 10.8699 1.00076 11.2841C1.0121 11.6984 1.14916 12.0994 1.39374 12.434C1.63832 12.7685 1.97886 13.0208 2.37016 13.1573L5.99516 14.418L8.01566 21.0997C8.04312 21.1889 8.08297 21.2739 8.13404 21.352C8.14179 21.364 8.15272 21.373 8.16096 21.3846C8.21996 21.467 8.29127 21.5397 8.37239 21.6004C8.39546 21.618 8.41755 21.6345 8.44221 21.6501C8.53714 21.7131 8.64228 21.7591 8.75294 21.7862L8.76478 21.7872L8.77149 21.7901C8.83802 21.8036 8.90574 21.8105 8.97364 21.8106C8.98017 21.8106 8.98597 21.8074 8.99244 21.8073C9.0949 21.8055 9.19647 21.7879 9.29353 21.755C9.31611 21.7473 9.33546 21.7345 9.35737 21.7252C9.42975 21.6952 9.49832 21.6567 9.56166 21.6106C9.61238 21.5679 9.66312 21.5251 9.71388 21.4824L12.416 18.4991L16.4463 21.6211C16.8011 21.8974 17.2379 22.0475 17.6875 22.0479C18.1587 22.0473 18.6154 21.8847 18.9809 21.5874C19.3465 21.2901 19.5987 20.8762 19.6954 20.4151L22.958 4.39849C23.032 4.03801 23.0065 3.66421 22.8844 3.31708C22.7623 2.96995 22.5481 2.66255 22.2647 2.42778ZM9.37016 14.7364C9.2315 14.8745 9.13672 15.0505 9.0977 15.2422L8.78819 16.7462L8.00413 14.1532L12.0694 12.0362L9.37016 14.7364ZM17.6719 20.0401L12.9092 16.3506C12.71 16.1966 12.46 16.1234 12.2092 16.1455C11.9583 16.1675 11.725 16.2833 11.5557 16.4697L10.6903 17.4249L10.9961 15.9385L18.0791 8.85549C18.2482 8.68665 18.3512 8.46285 18.3695 8.22461C18.3878 7.98638 18.3201 7.74947 18.1788 7.55681C18.0375 7.36414 17.8319 7.22845 17.5992 7.17433C17.3664 7.1202 17.122 7.15121 16.9102 7.26174L6.74491 12.5544L3.02055 11.1915L20.999 3.99905L17.6719 20.0401Z" fill="white"/>
    </Svg>
)

// Star 아이콘 컴포넌트
const StarIcon = () => (
    <Svg width="28" height="30" viewBox="0 0 24 24" fill="none">
        <Path
            d="M22 9.67002C21.9368 9.48711 21.822 9.32645 21.6693 9.20753C21.5167 9.0886 21.3328 9.01652 21.14 9.00002L15.45 8.17002L12.9 3.00002C12.8181 2.83095 12.6902 2.68837 12.5311 2.5886C12.3719 2.48883 12.1878 2.43591 12 2.43591C11.8121 2.43591 11.6281 2.48883 11.4689 2.5886C11.3097 2.68837 11.1819 2.83095 11.1 3.00002L8.54998 8.16002L2.85998 9.00002C2.6749 9.02633 2.5009 9.10399 2.35773 9.22418C2.21455 9.34438 2.10794 9.5023 2.04998 9.68002C1.99692 9.8537 1.99216 10.0385 2.03621 10.2147C2.08025 10.3909 2.17144 10.5517 2.29998 10.68L6.42998 14.68L5.42998 20.36C5.39428 20.5475 5.41297 20.7413 5.48385 20.9185C5.55473 21.0957 5.67483 21.2489 5.82998 21.36C5.98119 21.4681 6.15955 21.5319 6.34503 21.5443C6.5305 21.5567 6.71575 21.5171 6.87998 21.43L12 18.76L17.1 21.44C17.2403 21.5192 17.3988 21.5606 17.56 21.56C17.7718 21.5608 17.9784 21.4942 18.15 21.37C18.3051 21.2589 18.4252 21.1057 18.4961 20.9285C18.567 20.7513 18.5857 20.5575 18.55 20.37L17.55 14.69L21.68 10.69C21.8244 10.5677 21.9311 10.4069 21.9877 10.2264C22.0444 10.0458 22.0486 9.8529 22 9.67002ZM15.85 13.67C15.7327 13.7835 15.645 13.9239 15.5944 14.079C15.5439 14.2341 15.532 14.3993 15.56 14.56L16.28 18.75L12.52 16.75C12.3753 16.673 12.2139 16.6327 12.05 16.6327C11.8861 16.6327 11.7247 16.673 11.58 16.75L7.81998 18.75L8.53998 14.56C8.56791 14.3993 8.55609 14.2341 8.50554 14.079C8.45499 13.9239 8.36725 13.7835 8.24998 13.67L5.24998 10.67L9.45998 10.06C9.62198 10.0375 9.77598 9.97556 9.90848 9.87967C10.041 9.78379 10.1479 9.65686 10.22 9.51002L12 5.70002L13.88 9.52002C13.952 9.66686 14.059 9.79379 14.1915 9.88968C14.324 9.98556 14.478 10.0475 14.64 10.07L18.85 10.68L15.85 13.67Z"
            fill="white"
        />
    </Svg>
)

// GitTeol 로고 컴포넌트 (Instagram 스타일 그라데이션)
const GitTeolLogo = () => (
    <Svg width="68" height="17" viewBox="0 0 68 17" fill="none">
        <Defs>
            <LinearGradient id="gitteolGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <Stop offset="0%" stopColor="#667eea" />
                <Stop offset="50%" stopColor="#764ba2" />
                <Stop offset="100%" stopColor="#f093fb" />
            </LinearGradient>
        </Defs>
        <Path
            d="M8.86328 6.275C8.21328 6.225 7.74662 6.09167 7.46328 5.875C7.19662 5.65833 7.03828 5.45833 6.98828 5.275C6.93828 5.075 6.91328 4.975 6.91328 4.975C6.91328 4.975 6.89661 4.85833 6.86328 4.625C6.82995 4.39167 6.74661 4.15833 6.61328 3.925C6.47995 3.69167 6.24661 3.56667 5.91328 3.55C5.66328 3.53333 5.46328 3.68333 5.31328 4C5.16328 4.3 5.04661 4.70833 4.96328 5.225C4.87995 5.74167 4.82161 6.31667 4.78828 6.95C4.77161 7.56667 4.76328 8.19167 4.76328 8.825C4.77995 9.65833 4.82161 10.4667 4.88828 11.25C4.97161 12.0167 5.10495 12.6417 5.28828 13.125C5.48828 13.6083 5.76328 13.85 6.11328 13.85C6.37995 13.85 6.57995 13.7333 6.71328 13.5C6.84661 13.25 6.92995 12.975 6.96328 12.675C7.01328 12.375 7.03828 12.1083 7.03828 11.875C7.03828 11.6417 7.03828 11.525 7.03828 11.525C7.03828 11.525 6.93828 11.5333 6.73828 11.55C6.55495 11.5667 6.36328 11.5333 6.16328 11.45C5.96328 11.35 5.86328 11.1417 5.86328 10.825C5.86328 10.4917 5.92995 10.2667 6.06328 10.15C6.21328 10.0333 6.35495 9.96667 6.48828 9.95C6.63828 9.93333 6.71328 9.925 6.71328 9.925H8.88828C8.88828 9.925 8.99661 9.925 9.21328 9.925C9.42995 9.925 9.67995 9.96667 9.96328 10.05C10.2466 10.1167 10.4966 10.25 10.7133 10.45C10.9299 10.6333 11.0466 10.9167 11.0633 11.3C11.0966 12.2333 10.9633 13.0083 10.6633 13.625C10.3633 14.225 9.94661 14.7 9.41328 15.05C8.89661 15.4 8.31328 15.65 7.66328 15.8C7.02995 15.9333 6.37995 16 5.71328 16C5.04661 16 4.41328 15.8833 3.81328 15.65C3.21328 15.4167 2.67995 15.0083 2.21328 14.425C1.74661 13.825 1.36328 13 1.06328 11.95C0.779948 10.9 0.621615 9.56667 0.588281 7.95C0.554948 6.65 0.679948 5.59167 0.963281 4.775C1.24661 3.95833 1.61328 3.325 2.06328 2.875C2.51328 2.425 2.97995 2.10833 3.46328 1.925C3.96328 1.725 4.41328 1.6 4.81328 1.55C5.21328 1.5 5.49661 1.46667 5.66328 1.45C5.86328 1.43333 6.18828 1.45 6.63828 1.5C7.08828 1.55 7.57161 1.66667 8.08828 1.85C8.60495 2.01667 9.07995 2.275 9.51328 2.625C9.96328 2.975 10.2966 3.44167 10.5133 4.025C10.7299 4.60833 10.7716 5.05833 10.6383 5.375C10.5049 5.675 10.2966 5.89167 10.0133 6.025C9.72995 6.15833 9.46328 6.23333 9.21328 6.25C8.97995 6.26667 8.86328 6.275 8.86328 6.275ZM14.4338 5.475C14.4338 5.475 14.3255 5.475 14.1088 5.475C13.8921 5.45833 13.6338 5.40833 13.3338 5.325C13.0505 5.225 12.7921 5.05 12.5588 4.8C12.3255 4.55 12.2005 4.175 12.1838 3.675C12.1671 3.175 12.2421 2.80833 12.4088 2.575C12.5755 2.325 12.7838 2.15833 13.0338 2.075C13.2838 1.975 13.5255 1.925 13.7588 1.925C13.9921 1.90833 14.1588 1.89167 14.2588 1.875C14.3588 1.85833 14.5255 1.875 14.7588 1.925C14.9921 1.95833 15.2338 2.05 15.4838 2.2C15.7338 2.33333 15.9421 2.54167 16.1088 2.825C16.2755 3.09167 16.3421 3.45 16.3088 3.9C16.2755 4.33333 16.1588 4.66667 15.9588 4.9C15.7755 5.11667 15.5588 5.26667 15.3088 5.35C15.0755 5.41667 14.8671 5.45833 14.6838 5.475C14.5171 5.475 14.4338 5.475 14.4338 5.475ZM13.5588 14.45L12.9588 8.75C12.9588 8.75 12.9171 8.66667 12.8338 8.5C12.7671 8.31667 12.7171 8.19167 12.6838 8.125C12.6671 8.075 12.6338 7.975 12.5838 7.825C12.5505 7.65833 12.5921 7.48333 12.7088 7.3C12.8421 7.11667 13.1255 6.98333 13.5588 6.9C14.0088 6.81667 14.4755 6.79167 14.9588 6.825C15.4421 6.85833 15.8671 7.00833 16.2338 7.275C16.6171 7.525 16.8505 7.96667 16.9338 8.6C17.0005 9.06667 17.0671 9.625 17.1338 10.275C17.2005 10.9083 17.2588 11.5333 17.3088 12.15C17.3755 12.75 17.4255 13.2583 17.4588 13.675C17.5088 14.075 17.5338 14.275 17.5338 14.275C17.5338 14.275 17.5421 14.3667 17.5588 14.55C17.5755 14.7167 17.5505 14.9167 17.4838 15.15C17.4171 15.3667 17.2505 15.5667 16.9838 15.75C16.7338 15.9167 16.3255 16 15.7588 16C15.1921 16 14.7588 15.925 14.4588 15.775C14.1588 15.6083 13.9421 15.425 13.8088 15.225C13.6921 15.025 13.6171 14.85 13.5838 14.7C13.5671 14.5333 13.5588 14.45 13.5588 14.45ZM18.9232 2.35C18.9066 1.93333 19.0316 1.6 19.2982 1.35C19.5649 1.08333 20.1566 0.924999 21.0732 0.875C21.6899 0.841666 22.1399 0.916666 22.4232 1.1C22.7066 1.28333 22.8816 1.475 22.9482 1.675C23.0316 1.85833 23.0732 1.95 23.0732 1.95L23.2232 4.175C23.2232 4.175 23.3566 4.175 23.6232 4.175C23.9066 4.175 24.2232 4.20833 24.5732 4.275C24.9399 4.325 25.2566 4.43333 25.5232 4.6C25.8066 4.76667 25.9482 5.025 25.9482 5.375C25.9482 5.725 25.8149 5.98333 25.5482 6.15C25.2816 6.31667 24.9732 6.43333 24.6232 6.5C24.2732 6.55 23.9566 6.575 23.6732 6.575C23.4066 6.575 23.2732 6.575 23.2732 6.575C23.2732 6.575 23.2732 6.76667 23.2732 7.15C23.2899 7.51667 23.2982 8 23.2982 8.6C23.2982 9.18333 23.3066 9.80833 23.3232 10.475C23.3399 11.1417 23.3482 11.7833 23.3482 12.4C23.3482 13 23.3482 13.5083 23.3482 13.925C23.3649 14.325 23.3732 14.5583 23.3732 14.625C23.3732 14.7417 23.3316 14.9083 23.2482 15.125C23.1816 15.3417 22.9899 15.5417 22.6732 15.725C22.3732 15.9083 21.8732 16 21.1732 16C20.6566 16 20.2566 15.9417 19.9732 15.825C19.6899 15.6917 19.4816 15.55 19.3482 15.4C19.2316 15.2333 19.1649 15.0917 19.1482 14.975C19.1316 14.8417 19.1232 14.775 19.1232 14.775L18.9232 2.35ZM30.5275 4.125C30.3109 4.15833 30.0025 4.18333 29.6025 4.2C29.2025 4.2 28.7942 4.175 28.3775 4.125C27.9609 4.075 27.6025 3.98333 27.3025 3.85C27.0025 3.7 26.8359 3.48333 26.8025 3.2C26.7859 2.91667 26.8692 2.69167 27.0525 2.525C27.2525 2.35833 27.4859 2.23333 27.7525 2.15C28.0192 2.05 28.2525 1.99167 28.4525 1.975C28.6692 1.94167 28.7775 1.925 28.7775 1.925L35.7775 1.275C35.7775 1.275 35.8942 1.275 36.1275 1.275C36.3609 1.25833 36.6275 1.26667 36.9275 1.3C37.2442 1.33333 37.5275 1.41667 37.7775 1.55C38.0275 1.66667 38.1609 1.85833 38.1775 2.125C38.2109 2.39167 38.1275 2.61667 37.9275 2.8C37.7442 2.96667 37.5192 3.10833 37.2525 3.225C36.9859 3.325 36.7525 3.4 36.5525 3.45C36.3525 3.48333 36.2525 3.5 36.2525 3.5L34.6525 3.75C34.7192 4.16667 34.7942 4.75833 34.8775 5.525C34.9609 6.275 35.0442 7.10833 35.1275 8.025C35.2109 8.94167 35.2859 9.84167 35.3525 10.725C35.4192 11.6083 35.4692 12.4 35.5025 13.1C35.5525 13.8 35.5775 14.3 35.5775 14.6C35.5775 14.9833 35.4692 15.275 35.2525 15.475C35.0525 15.6583 34.8109 15.7917 34.5275 15.875C34.2609 15.9417 34.0192 15.9833 33.8025 16C33.6025 16 33.5025 16 33.5025 16C33.5025 16 33.3942 16 33.1775 16C32.9609 15.9833 32.7109 15.9167 32.4275 15.8C32.1609 15.6833 31.9192 15.4667 31.7025 15.15C31.5025 14.8333 31.4025 14.3583 31.4025 13.725C31.4025 13.1583 31.3692 12.4667 31.3025 11.65C31.2525 10.8333 31.1859 9.99167 31.1025 9.125C31.0192 8.24167 30.9275 7.425 30.8275 6.675C30.7442 5.925 30.6692 5.31667 30.6025 4.85C30.5525 4.36667 30.5275 4.125 30.5275 4.125ZM49.4316 8.45C49.3816 9.28333 49.1483 9.95833 48.7316 10.475C48.315 10.975 47.8066 11.3583 47.2066 11.625C46.6233 11.875 46.04 12.05 45.4566 12.15C44.8733 12.2333 44.3816 12.275 43.9816 12.275C43.5983 12.275 43.4066 12.275 43.4066 12.275C43.5066 12.8583 43.6483 13.275 43.8316 13.525C44.015 13.775 44.215 13.9167 44.4316 13.95C44.665 13.9833 44.8816 13.9667 45.0816 13.9C45.2816 13.8167 45.44 13.725 45.5566 13.625C45.69 13.525 45.7566 13.475 45.7566 13.475C45.7566 13.475 45.8483 13.4 46.0316 13.25C46.215 13.1 46.4983 12.9583 46.8816 12.825C47.2816 12.675 47.7816 12.6 48.3816 12.6C49.065 12.6 49.5233 12.6917 49.7566 12.875C50.0066 13.0417 50.1233 13.2417 50.1066 13.475C50.1066 13.6917 50.0566 13.8917 49.9566 14.075C49.8733 14.2417 49.8316 14.325 49.8316 14.325C49.8316 14.325 49.7566 14.4083 49.6066 14.575C49.4733 14.725 49.2233 14.9083 48.8566 15.125C48.49 15.3417 47.9816 15.5417 47.3316 15.725C46.6816 15.8917 45.8483 15.9833 44.8316 16C43.8483 16.0167 43.0233 15.8833 42.3566 15.6C41.69 15.3167 41.14 14.95 40.7066 14.5C40.2733 14.0333 39.94 13.55 39.7066 13.05C39.49 12.5333 39.3316 12.0583 39.2316 11.625C39.1483 11.175 39.1066 10.825 39.1066 10.575C39.1066 10.325 39.1233 10 39.1566 9.6C39.2066 9.2 39.315 8.78333 39.4816 8.35C39.665 7.9 39.94 7.475 40.3066 7.075C40.6733 6.675 41.1733 6.35 41.8066 6.1C42.4566 5.85 43.2816 5.71667 44.2816 5.7C45.5316 5.68333 46.5066 5.79167 47.2066 6.025C47.9066 6.25833 48.415 6.54167 48.7316 6.875C49.0483 7.20833 49.24 7.525 49.3066 7.825C49.39 8.125 49.4316 8.33333 49.4316 8.45ZM43.0566 10.55C44.0733 10.4667 44.8316 10.25 45.3316 9.9C45.8316 9.55 46.1233 9.15833 46.2066 8.725C46.29 8.29167 46.2066 7.925 45.9566 7.625C45.7233 7.30833 45.365 7.16667 44.8816 7.2C44.3983 7.21667 44.0316 7.4 43.7816 7.75C43.5316 8.08333 43.3566 8.475 43.2566 8.925C43.1566 9.35833 43.0983 9.74167 43.0816 10.075C43.065 10.3917 43.0566 10.55 43.0566 10.55ZM56.6928 5.85C57.3094 5.8 57.7844 5.86667 58.1178 6.05C58.4511 6.23333 58.6511 6.34167 58.7178 6.375C58.8844 6.45833 59.0344 6.55 59.1678 6.65C59.3178 6.75 59.3928 6.8 59.3928 6.8C59.3928 6.8 59.5178 6.84167 59.7678 6.925C60.0178 7.00833 60.3094 7.20833 60.6428 7.525C60.9761 7.825 61.2844 8.3 61.5678 8.95C61.8511 9.6 62.0178 10.4833 62.0678 11.6C62.1011 12.35 61.9844 12.9833 61.7178 13.5C61.4511 14 61.0928 14.4167 60.6428 14.75C60.2094 15.0667 59.7344 15.3167 59.2178 15.5C58.7178 15.6667 58.2344 15.7833 57.7678 15.85C57.3178 15.9167 56.9428 15.9583 56.6428 15.975C56.3594 15.9917 56.2178 16 56.2178 16C56.2178 16 56.0511 16 55.7178 16C55.4011 16 55.0011 15.95 54.5178 15.85C54.0344 15.7333 53.5511 15.5167 53.0678 15.2C52.6011 14.8667 52.2094 14.3833 51.8928 13.75C51.5928 13.1167 51.4594 12.275 51.4928 11.225C51.5261 10.175 51.7178 9.31667 52.0678 8.65C52.4344 7.96667 52.8678 7.43333 53.3678 7.05C53.8844 6.66667 54.3928 6.39167 54.8928 6.225C55.4094 6.05833 55.8344 5.95833 56.1678 5.925C56.5178 5.875 56.6928 5.85 56.6928 5.85ZM56.7928 8.3C56.7928 8.3 56.6844 8.43333 56.4678 8.7C56.2678 8.96667 56.0594 9.34167 55.8428 9.825C55.6428 10.3083 55.5428 10.875 55.5428 11.525C55.5428 12.1583 55.6178 12.6583 55.7678 13.025C55.9178 13.3917 56.0761 13.6583 56.2428 13.825C56.4261 13.975 56.5678 14.05 56.6678 14.05C56.7678 14.05 56.9261 14.0083 57.1428 13.925C57.3761 13.825 57.5844 13.6083 57.7678 13.275C57.9511 12.9417 58.0344 12.4167 58.0178 11.7C58.0011 11.1 57.9344 10.6167 57.8178 10.25C57.7178 9.88333 57.5761 9.55833 57.3928 9.275C57.2261 8.975 57.0261 8.65 56.7928 8.3ZM65.1895 0.949999C65.1895 0.949999 65.2978 0.958332 65.5145 0.975C65.7311 0.975 65.9811 1.01667 66.2645 1.1C66.5478 1.16667 66.7978 1.29167 67.0145 1.475C67.2311 1.65833 67.3395 1.91667 67.3395 2.25C67.3395 2.46667 67.3478 2.90833 67.3645 3.575C67.3811 4.24167 67.3978 5.03333 67.4145 5.95C67.4311 6.85 67.4478 7.78333 67.4645 8.75C67.4978 9.7 67.5228 10.5917 67.5395 11.425C67.5561 12.2583 67.5645 12.9333 67.5645 13.45C67.5811 13.9667 67.5895 14.225 67.5895 14.225C67.5895 14.225 67.5895 14.3167 67.5895 14.5C67.5895 14.6667 67.5395 14.875 67.4395 15.125C67.3395 15.3583 67.1478 15.5667 66.8645 15.75C66.5811 15.9167 66.1645 16 65.6145 16C64.8811 16 64.3478 15.9083 64.0145 15.725C63.6811 15.525 63.4728 15.3083 63.3895 15.075C63.3228 14.825 63.2978 14.6333 63.3145 14.5C63.3311 14.4333 63.3395 14.1417 63.3395 13.625C63.3395 13.1083 63.3311 12.4583 63.3145 11.675C63.3145 10.8917 63.3061 10.05 63.2895 9.15C63.2728 8.25 63.2561 7.36667 63.2395 6.5C63.2228 5.61667 63.1978 4.83333 63.1645 4.15C63.1478 3.45 63.1311 2.93333 63.1145 2.6C63.0811 2.13333 63.1895 1.78333 63.4395 1.55C63.7061 1.31667 64.0061 1.16667 64.3395 1.1C64.6895 1.01667 64.9728 0.966666 65.1895 0.949999Z"
            fill="url(#gitteolGradient)"
        />
    </Svg>
)

// 별 아이콘 컴포넌트 (좋아요 기능)
const LikeStarIcon = ({ liked, onPress }) => (
    <TouchableOpacity activeOpacity={0.6} onPress={onPress} style={{marginTop: -1}}>
        <Svg width="22" height="22" viewBox="0 0 24 24" fill="none">
            <Path
                d="M13.73 3.51001L15.49 7.03001C15.73 7.52002 16.37 7.99001 16.91 8.08001L20.1 8.61001C22.14 8.95001 22.62 10.43 21.15 11.89L18.67 14.37C18.25 14.79 18.02 15.6 18.15 16.18L18.86 19.25C19.42 21.68 18.13 22.62 15.98 21.35L12.99 19.58C12.45 19.26 11.56 19.26 11.01 19.58L8.02 21.35C5.88 22.62 4.58 21.67 5.14 19.25L5.85 16.18C5.98 15.6 5.75 14.79 5.33 14.37L2.85 11.89C1.39 10.43 1.86 8.95001 3.9 8.61001L7.09 8.08001C7.62 7.99001 8.26 7.52002 8.5 7.03001L10.26 3.51001C11.22 1.60001 12.78 1.60001 13.73 3.51001Z"
                stroke="#ffffff"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                fill={liked ? "#FFD700" : "none"}
            />
        </Svg>
    </TouchableOpacity>
)

// Fork 아이콘 컴포넌트 (클릭 불가, 통계만 표시)
const ForkIcon = () => (
    <View>
        <Svg width="20" height="20" viewBox="0 0 24 24" fill="none">
            <Path d="M2 9H4V12C4 12.2652 4.10536 12.5196 4.29289 12.7071C4.48043 12.8946 4.73478 13 5 13H11V15H9C8.73478 15 8.48043 15.1054 8.29289 15.2929C8.10536 15.4804 8 15.7348 8 16V22C8 22.2652 8.10536 22.5196 8.29289 22.7071C8.48043 22.8946 8.73478 23 9 23H15C15.2652 23 15.5196 22.8946 15.7071 22.7071C15.8946 22.5196 16 22.2652 16 22V16C16 15.7348 15.8946 15.4804 15.7071 15.2929C15.5196 15.1054 15.2652 15 15 15H13V13H19C19.2652 13 19.5196 12.8946 19.7071 12.7071C19.8946 12.5196 20 12.2652 20 12V9H22C22.2652 9 22.5196 8.89464 22.7071 8.70711C22.8946 8.51957 23 8.26522 23 8V2C23 1.73478 22.8946 1.48043 22.7071 1.29289C22.5196 1.10536 22.2652 1 22 1H16C15.7348 1 15.4804 1.10536 15.2929 1.29289C15.1054 1.48043 15 1.73478 15 2V8C15 8.26522 15.1054 8.51957 15.2929 8.70711C15.4804 8.89464 15.7348 9 16 9H18V11H6V9H8C8.26522 9 8.51957 8.89464 8.70711 8.70711C8.89464 8.51957 9 8.26522 9 8V2C9 1.73478 8.89464 1.48043 8.70711 1.29289C8.51957 1.10536 8.26522 1 8 1H2C1.73478 1 1.48043 1.10536 1.29289 1.29289C1.10536 1.48043 1 1.73478 1 2V8C1 8.26522 1.10536 8.51957 1.29289 8.70711C1.48043 8.89464 1.73478 9 2 9ZM17 7V3H21V7H17ZM14 17V21H10V17H14ZM3 3H7V7H3V3Z" fill="#666666"/>
        </Svg>
    </View>
)

// Watch 아이콘 컴포넌트 (클릭 불가, 통계만 표시)
const WatchIcon = () => (
    <View>
        <Svg width="20" height="20" viewBox="0 0 24 24" fill="none">
            <Path d="M15.5799 11.9999C15.5799 13.9799 13.9799 15.5799 11.9999 15.5799C10.0199 15.5799 8.41992 13.9799 8.41992 11.9999C8.41992 10.0199 10.0199 8.41992 11.9999 8.41992C13.9799 8.41992 15.5799 10.0199 15.5799 11.9999Z" stroke="#666666" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
            <Path d="M11.9998 20.27C15.5298 20.27 18.8198 18.19 21.1098 14.59C22.0098 13.18 22.0098 10.81 21.1098 9.39997C18.8198 5.79997 15.5298 3.71997 11.9998 3.71997C8.46984 3.71997 5.17984 5.79997 2.88984 9.39997C1.98984 10.81 1.98984 13.18 2.88984 14.59C5.17984 18.19 8.46984 20.27 11.9998 20.27Z" stroke="#666666" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
        </Svg>
    </View>
)

// 피드 아이템 컴포넌트
const FeedItem = ({ item }) => {
    const [liked, setLiked] = useState(false)

    return (
        <View style={{
            backgroundColor: '#000000',
            marginBottom: 0,
            borderBottomWidth: 0.3,
            borderBottomColor: '#2a2a2a'
        }}>
            {/* 프로필 헤더 */}
            <View style={{
                flexDirection: 'row',
                alignItems: 'center',
                paddingHorizontal: 14,
                paddingVertical: 12
            }}>
                {/* 프로필 이미지 */}
                <View style={{
                    width: 32,
                    height: 32,
                    borderRadius: 16,
                    marginRight: 12,
                    backgroundColor: '#1a1a1a',
                    justifyContent: 'center',
                    alignItems: 'center',
                    borderWidth: 0.5,
                    borderColor: '#333333'
                }}>
                    <Text style={{fontSize: 13}}>👤</Text>
                </View>

                {/* 사용자 이름 */}
                <View style={{flex: 1}}>
                    <Text style={{
                        fontSize: 14,
                        fontWeight: '600',
                        color: '#fafafa',
                        letterSpacing: -0.2
                    }}>
                        {item.userName}
                    </Text>
                </View>

                {/* 더보기 버튼 */}
                <TouchableOpacity activeOpacity={0.6}>
                    <Text style={{color: '#fafafa', fontSize: 18, fontWeight: 'bold'}}>⋯</Text>
                </TouchableOpacity>
            </View>

            {/* 피드 이미지 */}
            <View style={{
                width: '100%',
                height: 380,
                backgroundColor: '#0a0a0a'
            }}>
                <View style={{
                    width: '100%',
                    height: '100%',
                    justifyContent: 'center',
                    alignItems: 'center'
                }}>
                    <Svg width="70" height="70" viewBox="0 0 24 24" fill="none">
                        <Path d="M21 19V5C21 3.9 20.1 3 19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19ZM8.5 13.5L11 16.51L14.5 12L19 18H5L8.5 13.5Z" fill="#3a3a3a"/>
                    </Svg>
                    <Text style={{
                        fontSize: 11,
                        color: '#555555',
                        marginTop: 10,
                        fontWeight: '500'
                    }}>
                        피드 이미지 {item.id}
                    </Text>
                </View>
            </View>

            {/* 인터랙션 버튼들 */}
            <View style={{
                flexDirection: 'row',
                alignItems: 'center',
                paddingHorizontal: 14,
                paddingVertical: 8,
                paddingTop: 10
            }}>
                <View style={{flexDirection: 'row', alignItems: 'center', gap: 14}}>
                    {/* 별(좋아요) 버튼 + 개수 */}
                    <View style={{flexDirection: 'row', alignItems: 'center', gap: 6}}>
                        <LikeStarIcon
                            liked={liked}
                            onPress={() => {
                                setLiked(!liked)
                                console.log(`피드 ${item.id} 좋아요: ${!liked}`)
                            }}
                        />
                        <Text style={{
                            fontSize: 13,
                            fontWeight: '600',
                            color: '#fafafa',
                            marginTop: 1
                        }}>
                            {item.starCount.toLocaleString()}
                        </Text>
                    </View>

                    {/* Fork 아이콘 + 개수 */}
                    <TouchableOpacity activeOpacity={0.6}>
                        <View style={{flexDirection: 'row', alignItems: 'center', gap: 6}}>
                            <ForkIcon />
                            <Text style={{
                                fontSize: 13,
                                fontWeight: '600',
                                color: '#fafafa',
                                marginTop: 1
                            }}>
                                {item.forkCount}
                            </Text>
                        </View>
                    </TouchableOpacity>

                    {/* Watch 아이콘 + 개수 */}
                    <TouchableOpacity activeOpacity={0.6}>
                        <View style={{flexDirection: 'row', alignItems: 'center', gap: 6}}>
                            <WatchIcon />
                            <Text style={{
                                fontSize: 13,
                                fontWeight: '600',
                                color: '#fafafa',
                                marginTop: 1
                            }}>
                                {item.watchCount}
                            </Text>
                        </View>
                    </TouchableOpacity>
                </View>
            </View>

            {/* 피드 소개글 */}
            <View style={{
                paddingHorizontal: 14,
                paddingBottom: 6,
                paddingTop: 6
            }}>
                <Text style={{
                    fontSize: 13,
                    color: '#fafafa',
                    lineHeight: 17
                }}>
                    <Text style={{fontWeight: '600'}}>{item.userName}</Text>
                    <Text style={{color: '#fafafa'}}> {item.description}</Text>
                </Text>
            </View>

            {/* 시간 표시 */}
            <View style={{
                paddingHorizontal: 14,
                paddingBottom: 14
            }}>
                <Text style={{fontSize: 11, color: '#8a8a8a', fontWeight: '400'}}>
                    {item.time}
                </Text>
            </View>
        </View>
    )
}

const homePage=()=>{
    const {userData,getInfo}=useUser()
    const [feedData, setFeedData] = useState([])
    const [loading, setLoading] = useState(false)
    const [page, setPage] = useState(1)
    const flatListRef = useRef(null)

    // 랜덤 소개글 생성 함수
    const getRandomDescription = () => {
        const descriptions = [
            "오늘 하루도 고생 많았어요! 🌟",
            "새로운 프로젝트 시작! 열심히 해보겠습니다 💪",
            "커피 한 잔의 여유로움... ☕",
            "팀원들과 함께하는 시간이 가장 즐거워요 👥",
            "코딩하는 새벽의 고요함이 좋아요 🌙",
            "오늘 배운 것들을 정리해보는 시간 📚",
            "성취감 가득한 하루였네요! ✨",
            "동료들과의 협업이 만들어낸 결과물 🤝",
            "새로운 기술 스택에 도전하는 중입니다 🚀",
            "일과 휴식의 완벽한 밸런스 ⚖️",
            "창의적인 아이디어가 떠오르는 순간 💡",
            "디버깅 성공! 뿌듯한 순간입니다 🐛✅",
            "사용자 피드백을 반영한 새로운 기능 🔄",
            "마감을 앞둔 열정적인 개발 시간 ⏰",
            "좋은 사람들과 함께하는 프로젝트 ❤️"
        ]
        return descriptions[Math.floor(Math.random() * descriptions.length)]
    }

    // 가짜 피드 데이터 생성 함수
    const generateFeedData = (pageNum) => {
        const users = ['김철수', '이영희', '박민수', '정지은', '최상훈']
        const newData = []

        for(let i = 0; i < 5; i++) {
            const feedId = (pageNum - 1) * 5 + i + 1
            newData.push({
                id: feedId,
                userName: users[i % users.length],
                time: `${Math.floor(Math.random() * 12) + 1}시간 전`,
                description: getRandomDescription(),
                image: null, // 나중에 실제 이미지 URL 추가
                starCount: Math.floor(Math.random() * 1000), // 나중에 실제 레포지토리 star 개수로 변경
                forkCount: Math.floor(Math.random() * 200), // 나중에 실제 레포지토리 fork 개수로 변경
                watchCount: Math.floor(Math.random() * 100) // 나중에 실제 레포지토리 watch 개수로 변경
            })
        }
        return newData
    }

    // 초기 피드 로드
    const loadInitialFeed = () => {
        const initialData = generateFeedData(1)
        setFeedData(initialData)
    }

    // 추가 피드 로드 (무한스크롤)
    const loadMoreFeed = () => {
        if (loading) return

        setLoading(true)

        // API 호출 시뮬레이션 (1초 딜레이)
        setTimeout(() => {
            const nextPage = page + 1
            const newData = generateFeedData(nextPage)

            setFeedData(prevData => [...prevData, ...newData]) // 기존 데이터에 추가
            setPage(nextPage)
            setLoading(false)
        }, 1000)
    }

    // 탭에 포커스될 때마다 피드 초기화
    useFocusEffect(
        useCallback(() => {
            // 사용자 정보 가져오기
            getInfo()

            // 피드 데이터 초기화
            setFeedData([])
            setPage(1)
            setLoading(false)

            // 스크롤 위치를 맨 위로 초기화
            if (flatListRef.current) {
                flatListRef.current.scrollToOffset({ offset: 0, animated: false })
            }

            // 초기 피드 로드
            loadInitialFeed()
        }, [])
    )
// ----------------------------JSX--------------------------------

    return(
        <View style={{flex:1, backgroundColor: '#000000'}}>
            {/* 인스타 스타일 헤더 */}
            <View style={{
                flexDirection: 'row',
                justifyContent: 'space-between',
                alignItems: 'center',
                paddingHorizontal: 16,
                paddingTop: 12,
                paddingBottom: 12,
                backgroundColor: '#000000',
                borderBottomWidth: 0.3,
                borderBottomColor: '#333333'
            }}>
                <View style={{flexDirection: 'row', alignItems: 'center', gap: 8}}>
                    <GitTeolLogo />
                    <Svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                        <Defs>
                            <LinearGradient id="featherGradientIndex" x1="0%" y1="0%" x2="100%" y2="100%">
                                <Stop offset="0%" stopColor="#667eea" />
                                <Stop offset="100%" stopColor="#764ba2" />
                            </LinearGradient>
                        </Defs>
                        <Path d="M20.24 12.24C21.3658 11.1142 21.9983 9.58718 21.9983 7.995C21.9983 6.40282 21.3658 4.87584 20.24 3.75C19.1142 2.62416 17.5872 1.99166 15.995 1.99166C14.4028 1.99166 12.8758 2.62416 11.75 3.75L5 10.5V19H13.5L20.24 12.24Z" stroke="url(#featherGradientIndex)" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        <Path d="M16 8L2 22" stroke="url(#featherGradientIndex)" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        <Path d="M17.5 15H9" stroke="url(#featherGradientIndex)" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </Svg>
                </View>

                <View style={{flexDirection: 'row', gap: 20}}>
                    <TouchableOpacity
                        activeOpacity={0.6}
                        onPress={() => {
                            console.log('Star 아이콘 클릭!')
                        }}
                    >
                        <StarIcon />
                    </TouchableOpacity>

                    <TouchableOpacity
                        activeOpacity={0.6}
                        onPress={() => {
                            console.log('SMS 아이콘 클릭!')
                        }}
                    >
                        <SmsIcon />
                    </TouchableOpacity>
                </View>
            </View>

            {/* 피드 리스트 */}
            <FlatList
                ref={flatListRef}
                data={feedData}
                keyExtractor={(item) => item.id.toString()}
                renderItem={({ item }) => <FeedItem item={item} />}
                onEndReached={loadMoreFeed}
                onEndReachedThreshold={0.1}
                showsVerticalScrollIndicator={false}
                contentContainerStyle={{
                    paddingBottom: 20
                }}
                ListFooterComponent={() => {
                    if (loading) {
                        return (
                            <View style={{
                                padding: 20,
                                alignItems: 'center',
                                backgroundColor: '#000000'
                            }}>
                                <ActivityIndicator size="small" color="#fafafa" />
                            </View>
                        )
                    }
                    return null
                }}
            />
        </View>
    )
}

export default homePage